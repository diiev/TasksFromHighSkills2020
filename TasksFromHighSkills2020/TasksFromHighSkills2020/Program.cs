using System;
using System.Collections.Generic;

namespace TasksFromHighSkills2020
{
    class Program
    {
        static void Main(string[] args)
        {
            /* 
            Задание оценивается в 15 баллов
            У вас есть гирлянда из N лампочек.  
            Если подключить её к сети загораются лампочки только через k шаг. 
            Причем шаг k каждую минуту обновляется. И при каждом обновлении k, 
            если лампочка уже горит, она выключается. Например, на гирлянде 8 лампочек. 
            Число k = 3, значит при первом включении будет загораться каждая 3 лампа 
            (гореть будут 3 и 6 лампа). Через минуту число k поменялось 
            на 2 (гореть будут 2, 4 и 8 лампочка, 6 выключается, так как до этого она уже горела). 
            Ваша задача определить сколько лампочек будут включены после последнего обновления числа k.
            На вход вашей программе даётся число N лампочек на гирлянде и массив, хранящий все числа k. 
            Вы должны вернуть число горящий лампочек после последнего обновления k.
            Пример входных данных:
            7
            [2, 5, 4, 3]
            Пример выходных:
            3
            Объяснение: 
            На гирлянде 7 ламп. После первого включения загораются лампы: 2, 4, 6. 
            После обновления k на 5, загорается лампа 5, итого включены лампы: 2, 4, 5, 6. 
            Дальше должна включиться каждая 4 лампочка, 
            но лампа 4 уже была включена, поэтому она затухает. 
            Итого включенные лампы: 2, 5, 6. Следующее число k – 3. 
            Каждая третья лампа – это лампы 3 и 6. 3 включаем, а 6 выключаем, 
            так как она уже горела до этого. Итого включенных ламп три: 2, 3, 5. 

             */
            int N = 7;
            int[] LampArr = new int[N];
            int[] k = new int[] { 2, 5, 4, 3 };
            int count = 0;
            for (int i = 0; i < k.Length; i++)
            {
                for (int j = k[i]; j <= N; j += k[i])
                {
                    if (LampArr[j - 1] == 0)
                        LampArr[j - 1] = 1;
                    else
                        LampArr[j - 1] = 0;
                }
            }
            for (int i = 0; i < N; i++)
            {
                if (LampArr[i] == 1)
                    count++;
            }
            Console.WriteLine(count);

        }
    }
}
